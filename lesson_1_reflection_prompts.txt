How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It only shows the lines that changed so you can ignore the rest of it.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Easily go back to earlier versions if mistakes are introduced.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pro: logical differences between each version. Con: user error, can forget to commit, can't go back to logical differences only back in time.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

   Depends on the intended purpose of the VCS--whether it's intended for groups of files that go together or just regular files everyday users will treat as individual entities. More complicated to treat them as groups.

How can you use the commands git log and git diff to view the history of files?

    By using them... git log gives the log of changes, git diff shows the difference between them.

How might using version control make you more confident to make changes that
could break something?

    You don't have to worry about losing your work if it's easy to undo changes.

Now that you have your workspace set up, what do you want to try using Git for?

    Getting a job at Udacity.
